{"id":966949854,"lang":"cpp","lang_name":"C++","time":"1 week, 3 days","timestamp":1686261932,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/966949854/","is_pending":"Not Pending","title":"Count Good Nodes in Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nclass Solution {\npublic:\n\n    void dfs(TreeNode* node, vector<int>& seq) {\n        if (!node) return;\n        seq.push_back(node->val);\n\n        if (node->val < *max_element(seq.begin(), seq.end())) {\n            seq.pop_back();\n        }\n\n        dfs(node->left, seq);\n        dfs(node->right, seq);\n    }\n\n    int goodNodes(TreeNode* root) {\n        vector<int> vec;\n        dfs(root, vec);\n        return vec.size();\n    }\n};","compare_result":"111011011111101100000001001000101000000000000000000000000000000","title_slug":"count-good-nodes-in-binary-tree","has_notes":false}