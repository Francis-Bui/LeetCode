{"id":968113710,"lang":"cpp","lang_name":"C++","time":"1Â week, 2Â days","timestamp":1686408859,"status":10,"status_display":"Accepted","runtime":"1090 ms","url":"/submissions/detail/968113710/","is_pending":"Not Pending","title":"Delete the Middle Node of a Linked List","memory":"294.8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteMiddle(ListNode* head) {\n        if (head->next == nullptr)\n            return nullptr;\n        \n        ListNode *slow = head, *fast = head->next->next;\n\n        while (fast != nullptr && fast->next != nullptr) {\n            slow = slow->next;\n            fast = fast->next->next;\n        }\n\n        slow->next = slow->next->next;\n        \n        return head;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-the-middle-node-of-a-linked-list","has_notes":false}