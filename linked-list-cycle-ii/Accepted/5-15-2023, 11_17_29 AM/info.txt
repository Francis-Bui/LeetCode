{"id":950852956,"lang":"python3","lang_name":"Python3","time":"1Â month","timestamp":1684163849,"status":10,"status_display":"Accepted","runtime":"784 ms","url":"/submissions/detail/950852956/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"20.2 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def detectCycle(self, head):\n        curr = head\n        i = 0\n        valList = []\n\n        while curr:\n            valList.append(curr)\n            next = curr.next\n            curr = next\n            if curr in valList:\n                return curr\n\n        return None\n\n\n            ","compare_result":"11111111111111111","title_slug":"linked-list-cycle-ii","has_notes":false}