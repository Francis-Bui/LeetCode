{"id":950841023,"lang":"python3","lang_name":"Python3","time":"1Â month","timestamp":1684162562,"status":10,"status_display":"Accepted","runtime":"51 ms","url":"/submissions/detail/950841023/","is_pending":"Not Pending","title":"Middle of the Linked List","memory":"16.5 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def middleNode(self, head):\n        curr = head\n        prev = None\n\n        temp = head\n        i = 0\n        j = 0\n        while temp != None:\n            i+=1\n            temp = temp.next\n\n        if i == 1:\n            return head\n        \n        i = math.floor((i)/2)\n\n        while curr:\n            next = curr.next\n            curr = next\n            j+=1\n            if j==i:\n                return curr","compare_result":"111111111111111111111111111111111111","title_slug":"middle-of-the-linked-list","has_notes":false}