{"id":956166919,"lang":"python3","lang_name":"Python3","time":"3 weeks, 5 days","timestamp":1684896321,"status":10,"status_display":"Accepted","runtime":"47 ms","url":"/submissions/detail/956166919/","is_pending":"Not Pending","title":"N-ary Tree Preorder Traversal","memory":"18.7 MB","code":"\"\"\"\n# Definition for a Node.\nclass Node(object):\n    def __init__(self, val=None, children=None):\n        self.val = val\n        self.children = children\n\"\"\"\n\nclass Solution(object):\n    def preorder(self, root):\n        \"\"\"\n        :type root: Node\n        :rtype: List[int]\n        \"\"\"\n        \n        output =[]\n        \n        # perform dfs on the root and get the output stack\n        self.dfs(root, output)\n        \n        # return the output of all the nodes.\n        return output\n    \n    def dfs(self, root, output):\n        \n        # If root is none return \n        if root is None:\n            return\n        \n        # for preorder we first add the root val\n        output.append(root.val)\n        \n        # Then add all the children to the output\n        for child in root.children:\n            self.dfs(child, output)","compare_result":"11111111111111111111111111111111111111","title_slug":"n-ary-tree-preorder-traversal","has_notes":false}