{"id":970463465,"lang":"cpp","lang_name":"C++","time":"6Â days","timestamp":1686674797,"status":10,"status_display":"Accepted","runtime":"38 ms","url":"/submissions/detail/970463465/","is_pending":"Not Pending","title":"Number of Provinces","memory":"15.3 MB","code":"class Solution {\npublic:\n    void dfs(int node, vector<vector<int>>& isConnected, vector<bool>& visit) {\n        visit[node] = true;\n        for (int i = 0; i < isConnected.size(); i++) {\n            if (isConnected[node][i] && !visit[i]) {\n                dfs(i, isConnected, visit);\n            }\n        }\n    }\n    int findCircleNum(vector<vector<int>>& isConnected) {\n        int n = isConnected.size();\n        int numberOfComponents = 0;\n        vector<bool> visit(n);\n\n        for (int i = 0; i < n; i++) {\n            if (!visit[i]) {\n                numberOfComponents++;\n                dfs(i, isConnected, visit);\n            }\n        }\n        return numberOfComponents;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-provinces","has_notes":false}