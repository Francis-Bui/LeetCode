{"id":968150849,"lang":"cpp","lang_name":"C++","time":"1Â week, 2Â days","timestamp":1686410547,"status":10,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/968150849/","is_pending":"Not Pending","title":"Odd Even Linked List","memory":"10.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* oddEvenList(ListNode* head) {\n\n        if (head == nullptr) return nullptr;\n        ListNode *odd = head, *even = head->next, *evenHead = even;\n\n        while (even != nullptr && even->next != nullptr) {\n            odd->next = even->next;\n            odd = odd->next;\n            even->next = odd->next;\n            even = even->next;\n        }\n        odd->next = evenHead;\n        return head;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"odd-even-linked-list","has_notes":false}